name: "publish"

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  ARCH: x86_64
  DEPENDENCIES_ARCH: "'libappindicator-gtk3' 'webkit2gtk' 'gtk3'"
  DEPENDENCIES_RPM: "javascriptcoregtk4.0, webkit2gtk4.0, libappindicator-gtk3"
jobs:
  setup:
    runs-on: ubuntu-20.04
    outputs:
      name: ${{ steps.get-package.outputs.name }}
      name_bin: ${{ steps.get-package.outputs.name }}-bin
      version: ${{ steps.get-package.outputs.version }}
      description: ${{ steps.get-package.outputs.description }}
      license: ${{ steps.get-package.outputs.license }}
      arch_pkg_name: ${{ steps.get-package.outputs.name }}-bin-${{ steps.get-package.outputs.version }}-1-${{ env.ARCH }}.pkg.tar.zst
      rpm_pkg_name: RPMS/${{ steps.get-package.outputs.name }}-${{ steps.get-package.outputs.version }}-1.${{ env.ARCH }}.rpm
      tag_name: v${{ steps.get-package.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: get package info
        id: get-package
        run: |
          echo "name=$(node -p "require('./package.json').name")" >> $GITHUB_OUTPUT
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          echo "description=$(node -p "require('./package.json').description")" >> $GITHUB_OUTPUT
          echo "license=$(node -p "require('./package.json').license")" >> $GITHUB_OUTPUT

  build-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        settings:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-20.04" # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.settings.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.settings.platform == 'ubuntu-20.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm" # Set this to npm, yarn or pnpm.

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.settings.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: npm install # change this to npm or pnpm depending on which one you use.

      - uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ""
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "Basset v__VERSION__"
          releaseBody: "See the assets to download this version and install."

      - name: create arch package (ubuntu only)
        if: matrix.settings.platform == 'ubuntu-20.04'
        uses: 2m/arch-pkgbuild-builder@v1.17
        with:
          debug: true
          target: pkgbuild
          pkgname: ${{ needs.setup.outputs.name_bin }}/

      - name: create rpm.spec file (ubuntu only)
        if: matrix.settings.platform == 'ubuntu-20.04'
        run: |
          mkdir -p ${{ needs.setup.outputs.name_bin }}
          cat <<EOF > ./${{ needs.setup.outputs.name_bin }}/rpm.spec
          Name: ${{ needs.setup.outputs.name }}
          Version: ${{ needs.setup.outputs.version }}
          BuildArch: ${{ env.ARCH }}
          Release: 1
          Summary: ${{ needs.setup.outputs.description }}
          Requires: ${{ env.DEPENDENCIES_RPM }}
          License: ${{ needs.setup.outputs.license }}
          Source0: ${{ needs.setup.outputs.deb_pkg_renamed }}

          %description
          ${{ needs.setup.outputs.description }}

          %prep
          ar x %{SOURCE0}

          %build
          rm -rf control.tar.gz
          tar xvf data.tar.gz
                            
          %install
          cp -fr usr/ %{buildroot}

          %files
          %{_bindir}/${{ needs.setup.outputs.name }}
          /usr/share/applications/${{ needs.setup.outputs.name }}.desktop
          /usr/share/icons/hicolor/**/*
          EOF
          cat ${{ needs.setup.outputs.name_bin }}/rpm.spec

      - name: create rpm package (ubuntu only)
        if: matrix.settings.platform == 'ubuntu-20.04'
        uses: Antikythera/build-rpm@latest
        with:
          spec_file: ${{ needs.setup.outputs.name_bin }}/rpm.spec
          sources: ${{ needs.setup.outputs.name_bin }}/${{ needs.setup.outputs.deb_pkg_renamed }}

      - name: upload arch && rpm release (ubuntu only)
        if: matrix.settings.platform == 'ubuntu-20.04'
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ needs.setup.outputs.tag_name  }}
          files: |
            ${{ needs.setup.outputs.name_bin }}/${{ needs.setup.outputs.arch_pkg_name }}
            ${{ needs.setup.outputs.rpm_pkg_name }}
          prerelease: false
